#
# COPYRIGHT Ericsson 2022
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

{{- if index .Values "rbac" "enabled" }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "eric-oss-task-automation-ae.name" . }}-create-default-user-hook
  labels:
    {{- include "eric-oss-task-automation-ae.kubernetes-io-info" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install, post-upgrade, post-rollback
    "helm.sh/hook-weight": "20"
    "helm.sh/hook-delete-policy": before-hook-creation, hook-succeeded
    {{- include "eric-oss-task-automation-ae.helm-annotations" . | indent 4 }}
spec:
  template:
    spec:
      serviceAccountName: {{ template "eric-oss-task-automation-ae.name" . }}-sa
      {{- if include "eric-oss-task-automation-ae.pullSecrets" . }}
      imagePullSecrets:
        - name: {{ include "eric-oss-task-automation-ae.pullSecrets" . }}
      {{- end }}
      restartPolicy: OnFailure
      containers:
        - name: keycloak-client
          image: {{ template "eric-oss-task-automation-ae.imagePath" (dict "imageId" "keycloakClient" "values" .Values "files" .Files) }}
          imagePullPolicy: {{ include "eric-oss-task-automation-ae.registryImagePullPolicy" .}}
          env:
          - name: IAM_ADMIN_USER
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.iam.adminSecret | quote }}
                key: {{ .Values.global.iam.userKey | quote }}
          - name: IAM_ADMIN_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ .Values.global.iam.adminSecret | quote }}
                key: {{ .Values.global.iam.passwordKey | quote }}
          args:
          - "create"
          - "user"
          - "--keycloak_hostname={{ .Values.global.hosts.iam }}"
          - "--keycloak_user=$(IAM_ADMIN_USER)"
          - "--keycloak_password=$(IAM_ADMIN_PASSWORD)"
          - "--username={{ .Values.defaultUser.username }}"
          - "--password={{ .Values.defaultUser.password }}"
          volumeMounts:
          - name: create-cacert-volume
            mountPath: /mnt/certs
          securityContext:
            privileged: false
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true # keycloak client does write on the root file system
            runAsNonRoot: true
            runAsUser: 128474 # due to a limitation in the keycloak client image, it needs to be just this id
            capabilities:
              drop:
                - "all"
      nodeSelector: {{ include "eric-oss-flow-automation.nodeSelector" . | nindent 6 -}}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 6 }}
      {{- end }}
      volumes:
      - name: create-cacert-volume
        secret:
          secretName: {{ .Values.global.iam.cacert.secretName }}
          items:
            - key: {{ .Values.global.iam.cacert.key }}
              path: {{ .Values.global.iam.cacert.filePath }}
{{- end -}}